[project]
name = "lvmgort"
version = "1.7.1"
description = "The brains of LVM observing"
authors = [
    { name = "José Sánchez-Gallego", email = "gallegoj@uw.edu" }
]
license = { text = "BSD-3-Clause" }
readme = "README.md"
requires-python = ">=3.10,<4"

dependencies = [
    "sdsstools>=1.8.1",
    "sdss-clu>=2.3.1",
    "httpx>=0.27.0",
    "astropy>=6.0.0; python_version<'3.11'",
    "astropy>=7.0.0; python_version>='3.11'",
    "peewee>=3.16.2",
    "psycopg2-binary>=2.9.6",
    "unclick>=0.1.0",
    "rich>=13.4.2",
    "polars>=1.0.0",
    "redis[hiredis]>=5.0.3",
    "pydantic>=2.9.2",
    "lvmopstools>=0.5.3",
]

[project.urls]
Homepage = "https://github.com/sdss/lvmgort"
Repository = "https://github.com/sdss/lvmgort"
Documentation = "https://lvmgort.readthedocs.org"

[project.scripts]
gort = "gort.__main__:main"

[dependency-groups]
dev = [
    "ipython>=8.0.0",
    "ipdb>=0.12.3",
    "ruff>=0.5.0"
]
docs = [
    "Sphinx>=8.0.0",
    "furo>=2021.9.22",
    "myst-parser>=2.0.0",
    "nox>=2021.6.12",
    "sphinx-autobuild>=2021.3.14",
    "sphinx-copybutton>=0.4.0",
    "sphinx-click>=3.0.1",
    "sphinx-jsonschema>=1.16.11",
    "sphinx-autodoc-typehints>=1.23.2",
    "doc8>=0.8.0",
    "rstcheck>=3.3.1"
]
test = [
    "pytest>=5.2.2",
    "pytest-asyncio>=0.10.0",
    "pytest-cov>=2.8.1",
    "pytest-mock>=1.13.0",
    "pytest-sugar>=0.9.2",
    "coverage[toml]>=5.0"
]

[tool.uv]
package = true
default-groups = ["dev"]

[tool.ruff]
line-length = 88
target-version = 'py312'

[tool.ruff.lint]
select = ["E", "F", "I"]
unfixable = ["F841"]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F403", "E402", "F401"]

[tool.ruff.lint.isort]
known-first-party = ["gort"]
lines-after-imports = 2
section-order = ["future", "standard-library", "typing", "third-party", "sdss", "first-party", "local-folder"]

[tool.ruff.lint.isort.sections]
typing = ["typing"]
sdss = ["sdsstools", "clu"]

[tool.pytest.ini_options]
addopts = "--cov gort --cov-report xml --cov-report html --cov-report term -W ignore"
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"

[tool.coverage.run]
branch = true
include = ["src/gort/*"]
omit = [
    "*/__init__.py",
    "src/gort/__main__.py",
    "src/gort/exceptions.py"
]

[tool.coverage.report]
exclude_lines = [
    "if TYPE_CHECKING:",
    "# pragma: no cover"
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.sdist]
only-include = ["src/gort"]

[tool.hatch.build.targets.wheel]
packages = ["src/gort"]
